{"version":3,"sources":["../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty.js","app/common/WeatherWidget.js","app/favorite/FavoriteScreen.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread.js"],"names":["_defineProperty","obj","key","value","Object","defineProperty","enumerable","configurable","writable","WeatherWidget","props","_useState","useState","_useState2","slicedToArray","time","setTime","useEffect","loading","timezone","data","Math","floor","_map","map","t","DateTime","fromJSDate","Date","sys","setZone","hour","_map2","sunrise","sunset","dt","react_default","a","createElement","react_router_dom","to","concat","name","lat","lon","className","isDarkBg","Loaders","Fragment","src","weather","icon","alt","type","onClick","e","event","preventDefault","favoriteLocations","JSON","parse","window","localStorage","getItem","removePosition","i","length","splice","setItem","stringify","location","reload","removeFavorite","country","round","main","temp","path","index","viewBox","preserveAspectRatio","style","zIndex","d","stroke","fill","FavoriteScreen","appId","useAppId","locations","setLocations","isCancelled","resetBackground","loc","fetch","then","res","json","prevState","list","findIndex","l","target","arguments","source","ownKeys","keys","getOwnPropertySymbols","filter","sym","getOwnPropertyDescriptor","forEach","_objectSpread","catch","error","console","log","common_WeatherWidget","id"],"mappings":"sIAAe,SAAAA,EAAAC,EAAAC,EAAAC,GAYf,OAXAD,KAAAD,EACAG,OAAAC,eAAAJ,EAAAC,EAAA,CACAC,QACAG,YAAA,EACAC,cAAA,EACAC,UAAA,IAGAP,EAAAC,GAAAC,EAGAF,4ECkFeQ,MAtFf,SAAuBC,GAAO,IAAAC,EACNC,mBAAS,SADHC,EAAAT,OAAAU,EAAA,EAAAV,CAAAO,EAAA,GACvBI,EADuBF,EAAA,GACjBG,EADiBH,EAAA,GA4C5B,OAxBAI,oBAAU,WACR,IAAIP,EAAMQ,QAAS,CACjB,IAAIC,EAAW,OAAUT,EAAMU,KAAKD,SAAS,MAAS,EAAI,IAAM,IAAME,KAAKC,MAAMZ,EAAMU,KAAKD,SAAS,MADpFI,EAEO,CAAC,UAAW,UAAUC,IAAI,SAAAC,GAAC,OACjDC,WAASC,WAAW,IAAIC,KAAyB,IAApBlB,EAAMU,KAAKS,IAAIJ,KAAYK,QAAQX,GAAUY,OAH3DC,EAAA5B,OAAAU,EAAA,EAAAV,CAAAmB,EAAA,GAEZU,EAFYD,EAAA,GAEHE,EAFGF,EAAA,GAIXjB,EAAOW,WAASC,WAAW,IAAIC,KAAqB,IAAhBlB,EAAMU,KAAKe,KAAYL,QAAQX,GAAUY,KAEjFf,EADGiB,EAAUlB,IAAU,EACf,OACCA,IAASkB,EACV,UACClB,EAAOkB,GAAWlB,GAAQ,GAC3B,UACCA,EAAO,IAAMA,EAAOmB,EACrB,YACCnB,IAASmB,EACV,SACEA,EAASnB,IAAU,EACrB,OAEA,WAGX,CAACL,EAAMU,KAAMV,EAAMQ,UAGpBkB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMC,GAAE,YAAAC,OAAc/B,EAAMU,KAAKsB,KAAzB,KAAAD,OAAiC/B,EAAMU,KAAKuB,IAA5C,KAAAF,OAAmD/B,EAAMU,KAAKwB,KACpEC,UAAW,qBAAuB9B,GAAQ+B,YAAS/B,GAAQ,WAAa,KAEtEL,EAAMQ,QAAUkB,EAAAC,EAAAC,cAACS,EAAA,EAAD,MAEdX,EAAAC,EAAAC,cAACF,EAAAC,EAAMW,SAAP,KACEZ,EAAAC,EAAAC,cAAA,OAAKO,UAAU,0BACbT,EAAAC,EAAAC,cAAA,OAAKW,IAAK,qCAAuCvC,EAAMU,KAAK8B,QAAQ,GAAGC,KAAO,UAAWC,IAAI,GAAGP,UAAU,uCAE5GT,EAAAC,EAAAC,cAAA,UAAQe,KAAK,SAASR,UAAU,iDAC9BS,QAAS,SAACC,GAAD,OApDrB,SAAyBC,EAAOb,EAAKC,GACnCY,EAAMC,iBAGN,IAFA,IAAIC,EAAoBC,KAAKC,MAAMC,OAAOC,aAAaC,QAAQ,uBAAyB,GACpFC,GAAkB,EACbC,EAAI,EAAGA,EAAIP,EAAkBQ,OAAQD,IAC5C,GAAIP,EAAkBO,GAAGtB,KAAOA,GAAOe,EAAkBO,GAAGrB,KAAOA,EAAK,CACtEoB,EAAiBC,EACjB,MAGAD,GAAkB,IACpBN,EAAkBS,OAAOH,EAAgB,GACzCH,OAAOC,aAAaM,QAAQ,oBAAqBT,KAAKU,UAAUX,KAElEG,OAAOS,SAASC,SAsCUC,CAAejB,EAAG7C,EAAMU,KAAKuB,IAAKjC,EAAMU,KAAKwB,OAC7DR,EAAAC,EAAAC,cAAA,KAAGO,UAAU,kBAAb,aAEFT,EAAAC,EAAAC,cAAA,OAAKO,UAAU,4BACbT,EAAAC,EAAAC,cAAA,MAAIO,UAAU,wBAAwBnC,EAAMU,KAAKsB,MACjDN,EAAAC,EAAAC,cAAA,SAAOO,UAAU,2BAA2BnC,EAAMU,KAAKS,IAAI4C,UAE7DrC,EAAAC,EAAAC,cAAA,MAAIO,UAAU,+BAA+BxB,KAAKqD,MAAMhE,EAAMU,KAAKuD,KAAKC,MAAQ,GAAhF,QAEE,CACE,sDACA,sDACA,uDACApD,IAAI,SAACqD,EAAMC,GAAP,OACJ1C,EAAAC,EAAAC,cAAA,OAAKO,UAAU,iCAAiC3C,IAAK4E,GACnD1C,EAAAC,EAAAC,cAAA,OAAKO,UAAU,uBAAuBkC,QAAQ,cAC5CC,oBAAoB,gBACpBC,MAAO,CAACC,QAAS,IACjB9C,EAAAC,EAAAC,cAAA,QAAM6C,EAAGN,EACTI,MAAO,CAACG,OAAQ,OAAQC,KAAM,oDCjCnCC,UA5Cf,SAAwB5E,GACtB,IAAM6E,EAAQC,cACV9B,EAAoBC,KAAKC,MAAMC,OAAOC,aAAaC,QAAQ,uBAAyB,GAF3DpD,EAGGC,mBAAS8C,GAHZ7C,EAAAT,OAAAU,EAAA,EAAAV,CAAAO,EAAA,GAGxB8E,EAHwB5E,EAAA,GAGb6E,EAHa7E,EAAA,GA+B7B,OA1BAI,oBAAU,WACR,IAAI0E,GAAc,EAoBlB,OAnBAjF,EAAMkF,kBACFlC,EAAkBQ,QACpBR,EAAkBlC,IAAI,SAAAqE,GAAG,OACvBC,MAAK,uDAAArD,OAAwDoD,EAAIlD,IAA5D,SAAAF,OAAuEoD,EAAIjD,IAA3E,WAAAH,OAAwF8C,EAAxF,kBACJQ,KAAK,SAAAC,GAAG,OAAIA,EAAIC,SAChBF,KAAK,SAAA3E,GACCuE,GACHD,EAAa,SAAAQ,GACX,IAAIC,EAAOD,EAAUzD,SACjBqC,EAAQqB,EAAKC,UAAU,SAAAC,GAAC,OAAIA,EAAE1D,MAAQkD,EAAIlD,KAAO0D,EAAEzD,MAAQiD,EAAIjD,MAEnE,OADAuD,EAAKrB,GCrBJ,SAAAwB,GACf,QAAArC,EAAA,EAAiBA,EAAAsC,UAAArC,OAAsBD,IAAA,CACvC,IAAAuC,EAAA,MAAAD,UAAAtC,GAAAsC,UAAAtC,GAAA,GACAwC,EAAArG,OAAAsG,KAAAF,GAEA,oBAAApG,OAAAuG,wBACAF,IAAAhE,OAAArC,OAAAuG,sBAAAH,GAAAI,OAAA,SAAAC,GACA,OAAAzG,OAAA0G,yBAAAN,EAAAK,GAAAvG,eAIAmG,EAAAM,QAAA,SAAA7G,GACMF,EAAcsG,EAAApG,EAAAsG,EAAAtG,MAIpB,OAAAoG,EDKcU,CAAA,GAAkB5F,EAAS+E,EAAKrB,IACzBqB,MAIZc,MAAM,SAAAC,GAAK,OAAIC,QAAQC,IAAIF,OAIxB,WACNvB,GAAc,IAEf,IAGDvD,EAAAC,EAAAC,cAAA,OAAKO,UAAU,0BACbT,EAAAC,EAAAC,cAAA,OAAKO,UAAU,gBAEX4C,EAAUvB,OACVuB,EAAUjE,IAAI,SAAC8C,EAAUQ,GAAX,OAAqB1C,EAAAC,EAAAC,cAAC+E,EAAD,CAAenG,SAAUoD,EAASpB,QAAS9B,KAAMkD,EAAUpE,IAAKoE,EAASgD,IAAMxC,MAC/G1C,EAAAC,EAAAC,cAAA,QAAMO,UAAU,YAAWT,EAAAC,EAAAC,cAAA","file":"static/js/5.3d64b755.chunk.js","sourcesContent":["export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","import React, { useState, useEffect } from 'react'\r\nimport { Link } from \"react-router-dom\"\r\nimport { DateTime } from 'luxon'\r\nimport { SectionLoader } from '../common/Loaders'\r\nimport { isDarkBg } from '../common/Utils'\r\n\r\nimport './WeatherWidget.css'\r\n\r\nfunction WeatherWidget(props) {\r\n  let [time, setTime] = useState('start')\r\n\r\n  function removeFavorite (event, lat, lon) {\r\n    event.preventDefault()\r\n    let favoriteLocations = JSON.parse(window.localStorage.getItem('favoriteLocations')) || []\r\n    let removePosition = -1\r\n    for (let i = 0; i < favoriteLocations.length; i++) {\r\n      if (favoriteLocations[i].lat == lat && favoriteLocations[i].lon == lon) {\r\n        removePosition = i\r\n        break\r\n      }\r\n    }\r\n    if (removePosition >= 0) {\r\n      favoriteLocations.splice(removePosition, 1)\r\n      window.localStorage.setItem('favoriteLocations', JSON.stringify(favoriteLocations))\r\n    }\r\n    window.location.reload()\r\n  }\r\n\r\n  useEffect(() => {\r\n    if(!props.loading) {\r\n      let timezone = 'UTC' + ((props.data.timezone/3600) >= 0 ? '+' : '') + Math.floor(props.data.timezone/3600)\r\n      let [sunrise, sunset] = ['sunrise', 'sunset'].map(t => \r\n        DateTime.fromJSDate(new Date(props.data.sys[t] * 1000)).setZone(timezone).hour)\r\n        let time = DateTime.fromJSDate(new Date(props.data.dt * 1000)).setZone(timezone).hour\r\n      if ((sunrise - time) === 1) {\r\n        setTime('dawn')\r\n      } else if (time === sunrise) {\r\n        setTime('sunrise')\r\n      } else if (time > sunrise && time <= 12) {\r\n        setTime('morning')\r\n      } else if (time > 12 && time < sunset) {\r\n        setTime('afternoon')\r\n      } else if (time === sunset) {\r\n        setTime('sunset')\r\n      } else if ((sunset - time) === 1) {\r\n        setTime('dusk')\r\n      } else {\r\n        setTime('night')\r\n      }\r\n    }\r\n  }, [props.data, props.loading])\r\n\r\n  return (\r\n    <Link to={`/weather/${props.data.name}/${props.data.lat}/${props.data.lon}`} \r\n      className={'weather-widget bg-' + time + (isDarkBg(time) ? ' bg-dark' : '')}>\r\n      {\r\n        props.loading ? <SectionLoader /> :\r\n        (\r\n          <React.Fragment>\r\n            <div className=\"weather-widget__status\">\r\n              <img src={\"https://openweathermap.org/img/wn/\" + props.data.weather[0].icon + \"@2x.png\"} alt=\"\" className=\"weather-icon weather-status__icon\" />\r\n            </div>\r\n            <button type=\"button\" className=\"icon-btn save-location-btn weather-widget__btn\" \r\n              onClick={(e) => removeFavorite(e, props.data.lat, props.data.lon)}>\r\n              <i className=\"material-icons\">favorite</i>\r\n            </button>\r\n            <div className=\"weather-widget__location\">\r\n              <h3 className=\"weather-widget__city\">{props.data.name}</h3>\r\n              <small className=\"weather-widget__country\">{props.data.sys.country}</small>\r\n            </div>\r\n            <h1 className=\"weather-widget__temperature\">{Math.round(props.data.main.temp || 0)}&deg;</h1>\r\n            {\r\n              [\r\n                'M620, 0 C750, 150 550, 250 780, 460 L0, 460 L0, 0 Z',\r\n                'M650, 0 C550, 200 800, 250 750, 420 L0, 460 L0, 0 Z',\r\n                'M700, 0 C550, 210 800, 200 700, 420 L0, 460 L0, 0 Z'\r\n              ].map((path, index) => (\r\n                <div className=\"vertical-wavy-border-container\" key={index}>\r\n                  <svg className=\"vertical-wavy-border\" viewBox=\"0 0 800 450\"\r\n                    preserveAspectRatio=\"xMinYMin meet\"\r\n                    style={{zIndex: -1}}>\r\n                    <path d={path} \r\n                    style={{stroke: 'none', fill: 'rgba(255, 255, 255, 0.5)'}}></path>\r\n                  </svg>\r\n                </div>\r\n              ))\r\n            }\r\n          </React.Fragment>\r\n        )\r\n      }\r\n    </Link>\r\n  )\r\n}\r\n\r\nexport default WeatherWidget","import React, {useState, useEffect} from 'react'\nimport WeatherWidget from '../common/WeatherWidget'\nimport { useAppId } from '../App'\nimport './FavoriteScreen.css'\n\nfunction FavoriteScreen(props) {\n  const appId = useAppId()\n  let favoriteLocations = JSON.parse(window.localStorage.getItem('favoriteLocations')) || []\n  let [locations, setLocations] = useState(favoriteLocations)\n\n  useEffect(() => {\n    let isCancelled = false\n    props.resetBackground()\n    if (favoriteLocations.length) {\n      favoriteLocations.map(loc => \n        fetch(`https://api.openweathermap.org/data/2.5/weather?lat=${loc.lat}&lon=${loc.lon}&appid=${appId}&units=metric`)\n        .then(res => res.json())\n        .then(data => {\n          if (!isCancelled) {\n            setLocations(prevState => {\n              let list = prevState.concat()\n              let index = list.findIndex(l => l.lat === loc.lat && l.lon === loc.lon)\n              list[index] = {...data, ...list[index]}\n              return list\n            })\n          }\n        })\n        .catch(error => console.log(error))\n      )\n    }\n\n    return (() => {\n      isCancelled = true\n    })\n  }, [])\n\n  return (\n    <div className=\"screen favorite-screen\">\n      <div className=\"widgets-list\">\n        {\n          locations.length ?\n          locations.map((location, index) => <WeatherWidget loading={!location.weather} data={location} key={location.id || index} />) \n          : (<span className=\"info-msg\"><i>No locations saved</i></span>)\n        }\n      </div>\n    </div>\n  )\n}\n\nexport default FavoriteScreen","import defineProperty from \"./defineProperty\";\nexport default function _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n    var ownKeys = Object.keys(source);\n\n    if (typeof Object.getOwnPropertySymbols === 'function') {\n      ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) {\n        return Object.getOwnPropertyDescriptor(source, sym).enumerable;\n      }));\n    }\n\n    ownKeys.forEach(function (key) {\n      defineProperty(target, key, source[key]);\n    });\n  }\n\n  return target;\n}"],"sourceRoot":""}