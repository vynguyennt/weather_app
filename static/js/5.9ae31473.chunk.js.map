{"version":3,"sources":["../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty.js","app/common/WeatherWidget.js","app/favorite/FavoriteScreen.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread.js"],"names":["_defineProperty","obj","key","value","Object","defineProperty","enumerable","configurable","writable","WeatherWidget","props","_useState","useState","_useState2","slicedToArray","time","setTime","useEffect","timezone","data","Math","floor","_map","map","t","DateTime","fromJSDate","Date","sys","setZone","hour","_map2","sunrise","sunset","dt","react_default","a","createElement","react_router_dom","to","concat","name","coord","lat","lon","className","src","weather","icon","alt","type","onClick","e","event","preventDefault","favoriteLocations","JSON","parse","window","localStorage","getItem","removePosition","i","length","splice","setItem","stringify","location","reload","removeFavorite","country","round","main","temp","path","index","viewBox","preserveAspectRatio","style","zIndex","d","stroke","fill","FavoriteScreen","locations","setLocations","resetBackground","Promise","all","loc","fetch","then","res","json","target","arguments","source","ownKeys","keys","getOwnPropertySymbols","filter","sym","getOwnPropertyDescriptor","forEach","_objectSpread","catch","error","console","log","common_WeatherWidget","id"],"mappings":"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","file":"static/js/5.9ae31473.chunk.js","sourcesContent":["export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","import React, { useState, useEffect } from 'react'\r\nimport { Link } from \"react-router-dom\"\r\nimport { DateTime } from 'luxon'\r\n\r\nimport './WeatherWidget.css'\r\n\r\nfunction WeatherWidget(props) {\r\n  let [time, setTime] = useState('start')\r\n  function removeFavorite (event, lat, lon) {\r\n    event.preventDefault()\r\n    let favoriteLocations = JSON.parse(window.localStorage.getItem('favoriteLocations')) || []\r\n    let removePosition = -1\r\n    for (let i = 0; i < favoriteLocations.length; i++) {\r\n      if (favoriteLocations[i].lat == lat && favoriteLocations[i].lon == lon) {\r\n        removePosition = i\r\n        break\r\n      }\r\n    }\r\n    if (removePosition >= 0) {\r\n      favoriteLocations.splice(removePosition, 1)\r\n      window.localStorage.setItem('favoriteLocations', JSON.stringify(favoriteLocations))\r\n    }\r\n    window.location.reload()\r\n  }\r\n\r\n  useEffect(() => {\r\n    let timezone = 'UTC' + ((props.data.timezone/3600) >= 0 ? '+' : '') + Math.floor(props.data.timezone/3600)\r\n    let [sunrise, sunset] = ['sunrise', 'sunset'].map(t => \r\n      DateTime.fromJSDate(new Date(props.data.sys[t] * 1000)).setZone(timezone).hour)\r\n      let time = DateTime.fromJSDate(new Date(props.data.dt * 1000)).setZone(timezone).hour\r\n    if ((sunrise - time) === 1) {\r\n      setTime('dawn')\r\n    } else if (time === sunrise) {\r\n      setTime('sunrise')\r\n    } else if (time > sunrise && time <= 12) {\r\n      setTime('morning')\r\n    } else if (time > 12 && time < sunset) {\r\n      setTime('afternoon')\r\n    } else if (time === sunset) {\r\n      setTime('sunset')\r\n    } else if ((sunset - time) === 1) {\r\n      setTime('dusk')\r\n    } else {\r\n      setTime('night')\r\n    }\r\n  }, [props.data])\r\n\r\n  return (\r\n    <Link to={`/weather/${props.data.name}/${props.data.coord.lat}/${props.data.coord.lon}`} className={'weather-widget bg-' + time}>\r\n      <div className=\"weather-widget__status\">\r\n        <img src={\"https://openweathermap.org/img/wn/\" + props.data.weather[0].icon + \"@2x.png\"} alt=\"\" className=\"weather-icon weather-status__icon\" />\r\n      </div>\r\n      <button type=\"button\" className=\"icon-btn save-location-btn weather-widget__btn\" \r\n        onClick={(e) => removeFavorite(e, props.data.coord.lat, props.data.coord.lon)}>\r\n        <i className=\"material-icons\">favorite</i>\r\n      </button>\r\n      <div className=\"weather-widget__location\">\r\n        <h3 className=\"weather-widget__city\">{props.data.name}</h3>\r\n        <small className=\"weather-widget__country\">{props.data.sys.country}</small>\r\n      </div>\r\n      <h1 className=\"weather-widget__temperature\">{Math.round(props.data.main.temp || 0)}&deg;</h1>\r\n      {\r\n        [\r\n          'M620, 0 C750, 150 550, 250 780, 460 L0, 460 L0, 0 Z',\r\n          'M650, 0 C550, 200 800, 250 750, 420 L0, 460 L0, 0 Z',\r\n          'M700, 0 C550, 210 800, 200 700, 420 L0, 460 L0, 0 Z'\r\n        ].map((path, index) => (\r\n          <div className=\"vertical-wavy-border-container\" key={index}>\r\n            <svg className=\"vertical-wavy-border\" viewBox=\"0 0 800 450\"\r\n              preserveAspectRatio=\"xMinYMin meet\"\r\n              style={{zIndex: -1}}>\r\n              <path d={path} \r\n              style={{stroke: 'none', fill: 'rgba(255, 255, 255, 0.5)'}}></path>\r\n            </svg>\r\n          </div>\r\n        ))\r\n      }\r\n    </Link>\r\n  )\r\n}\r\n\r\nexport default WeatherWidget","import React, {useState, useEffect} from 'react'\nimport WeatherWidget from '../common/WeatherWidget'\nimport './FavoriteScreen.css'\n\nfunction FavoriteScreen(props) {\n  let [locations, setLocations] = useState([])\n\n  useEffect(() => {\n    props.resetBackground()\n    let favoriteLocations = JSON.parse(window.localStorage.getItem('favoriteLocations')) || []\n    if (favoriteLocations.length) {\n      Promise.all(\n        favoriteLocations.map(loc => \n          fetch(`https://api.openweathermap.org/data/2.5/weather?lat=${loc.lat}&lon=${loc.lon}&appid=dd7b078955b9a8f743b67fdd8db9a012&units=metric`)\n          .then(res => res.json())\n          .then(data => {\n            data = {...data, name: loc.name, coord: {lat: loc.lat, lon: loc.lon}}\n            return data\n          })\n        )\n      )\n      .then(data => {\n        setLocations(data)\n      }).catch(error => console.log(error))\n    }\n  }, [])\n\n  return (\n    <div className=\"screen favorite-screen\">\n      <div className=\"widgets-list\">\n        {\n          locations.map(location => <WeatherWidget data={location} key={location.id} />) \n        }\n      </div>\n    </div>\n  )\n}\n\nexport default FavoriteScreen","import defineProperty from \"./defineProperty\";\nexport default function _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n    var ownKeys = Object.keys(source);\n\n    if (typeof Object.getOwnPropertySymbols === 'function') {\n      ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) {\n        return Object.getOwnPropertyDescriptor(source, sym).enumerable;\n      }));\n    }\n\n    ownKeys.forEach(function (key) {\n      defineProperty(target, key, source[key]);\n    });\n  }\n\n  return target;\n}"],"sourceRoot":""}